{"version":3,"file":"static/js/FullPizza.aadb7b6d.chunk.js","mappings":"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","sources":["pages/FullPizza.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { useAppDispatch } from '../redux/store';\r\nimport axios from 'axios';\r\n\r\nimport { addItem } from '../redux/cart/slice';\r\n\r\nimport { selectCartItemById } from '../redux/cart/selectors';\r\n\r\nimport { TPizza } from '../redux/pizza/types';\r\nimport { TCartItem } from '../redux/cart/types';\r\n\r\nconst pizzaTypes = ['тонкая', 'традиционная'];\r\n\r\nconst FullPizza: React.FC = () => {\r\n  const [pizza, setPizza] = useState<TPizza>();\r\n  const [activeType, setActiveType] = useState(0);\r\n  const [activeSize, setActiveSize] = useState(0);\r\n\r\n  const { pizzaId } = useParams();\r\n  const validId = pizzaId === undefined ? '' : pizzaId; // сделано для TS\r\n\r\n  const cartItem = useSelector(selectCartItemById(validId));\r\n  const navigate = useNavigate();\r\n  const dispatch = useAppDispatch();\r\n  const apiBase = process.env.REACT_APP_MOCKAPI_TOKEN;\r\n\r\n  useEffect(() => {\r\n    async function fetchPizza() {\r\n      try {\r\n        const { data } = await axios.get<TPizza>(`https://${apiBase}.mockapi.io/items/${pizzaId}`);\r\n        setPizza(data);\r\n      } catch (error) {\r\n        alert('Ошибка при получении пиццы!');\r\n        navigate('/');\r\n      }\r\n    }\r\n\r\n    fetchPizza();\r\n  }, [pizzaId]);\r\n\r\n  if (!pizza) {\r\n    return <div className=\"full-pizza__loading\">Пицца загружается...</div>;\r\n  }\r\n\r\n  const onCLickAdd = () => {\r\n    const item: TCartItem = {\r\n      id: pizza.id,\r\n      title: pizza.title,\r\n      price: pizza.price,\r\n      imageUrl: pizza.imageUrl,\r\n      type: pizzaTypes[activeType],\r\n      size: pizza.sizes[activeSize],\r\n      count: 0,\r\n    };\r\n\r\n    dispatch(addItem(item));\r\n  };\r\n\r\n  const goBackButton = () => {\r\n    window.scrollTo(0, 0);\r\n    navigate(-1);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container full-pizza__container\">\r\n      <img className=\"full-pizza__image\" src={pizza.imageUrl} alt=\"Pizza\" />\r\n      <div>\r\n        <h1 className=\"full-pizza__title\">{pizza.title}</h1>\r\n        <p className=\"full-pizza__description\">{pizza.description}</p>\r\n\r\n        <div className=\"full-pizza__bottom-controllers\">\r\n          <div className=\"full-pizza__selector\">\r\n            <ul>\r\n              {pizza.types.map((typeId, i) => (\r\n                <li\r\n                  key={i}\r\n                  className={i === activeType ? 'active' : ''}\r\n                  onClick={() => setActiveType(i)}\r\n                >\r\n                  {pizzaTypes[typeId]}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n            <ul>\r\n              {pizza.sizes.map((size, i) => (\r\n                <li\r\n                  key={i}\r\n                  className={i === activeSize ? 'active' : ''}\r\n                  onClick={() => setActiveSize(i)}\r\n                >\r\n                  {size} см.\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n\r\n          <div className=\"full-pizza__bottom\">\r\n            <div className=\"pizza-block__price\">от {pizza.price} ₽</div>\r\n            <button className=\"button button--outline button--add\" onClick={onCLickAdd}>\r\n              <svg\r\n                width=\"12\"\r\n                height=\"12\"\r\n                viewBox=\"0 0 12 12\"\r\n                fill=\"none\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n              >\r\n                <path\r\n                  d=\"M10.8 4.8H7.2V1.2C7.2 0.5373 6.6627 0 6 0C5.3373 0 4.8 0.5373 4.8 1.2V4.8H1.2C0.5373 4.8 0 5.3373 0 6C0 6.6627 0.5373 7.2 1.2 7.2H4.8V10.8C4.8 11.4627 5.3373 12 6 12C6.6627 12 7.2 11.4627 7.2 10.8V7.2H10.8C11.4627 7.2 12 6.6627 12 6C12 5.3373 11.4627 4.8 10.8 4.8Z\"\r\n                  fill=\"white\"\r\n                />\r\n              </svg>\r\n              <span>Добавить</span>\r\n              {cartItem ? <i>{cartItem.count}</i> : null}\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"full-pizza__bottom-buttons\">\r\n          <div onClick={goBackButton} className=\"button button--outline button--add go-back-btn\">\r\n            <svg\r\n              width=\"8\"\r\n              height=\"14\"\r\n              viewBox=\"0 0 8 14\"\r\n              fill=\"none\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                d=\"M7 13L1 6.93015L6.86175 1\"\r\n                stroke=\"#D3D3D3\"\r\n                strokeWidth=\"1.5\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n              ></path>\r\n            </svg>\r\n\r\n            <span>Вернуться назад</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FullPizza;\r\n"],"names":["pizzaTypes","FullPizza","pizza","setPizza","useState","activeType","setActiveType","activeSize","setActiveSize","pizzaId","useParams","validId","undefined","cartItem","useSelector","selectCartItemById","navigate","useNavigate","dispatch","useAppDispatch","useEffect","async","data","axios","get","error","alert","fetchPizza","_jsx","className","children","_jsxs","src","imageUrl","alt","title","description","types","map","typeId","i","onClick","sizes","size","price","onCLickAdd","item","id","type","count","addItem","width","height","viewBox","fill","xmlns","d","goBackButton","window","scrollTo","stroke","strokeWidth","strokeLinecap","strokeLinejoin"],"sourceRoot":""}